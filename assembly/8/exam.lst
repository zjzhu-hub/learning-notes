     1                                  start: 				;start: 标号
     2 00000000 B800B8                  	mov ax, 0xb800	 ;段地址B800
     3 00000003 8ED8                    	mov ds, ax	
     4                                  
     5                                  ; 这里不填默认是用ds段寄存器 所以就是0xb800开始 0xb801 0xb802
     6 00000005 C606000041              	mov byte [0x00], 0x41	;字符A的ASCII编码, byte表示字节不然不知道传输的长度， [0x00] 表示内存单元
     7 0000000A C60601000C              	mov byte [0x01], 0x0c
     8                                  
     9 0000000F C606020073              	mov byte [0x02], 's'	;等同于 mov byte [0x02], 0x73
    10 00000014 C606030004              	mov byte [0x03], 0x04	;;黑底红字，无闪烁
    11                                  
    12 00000019 C606040073              	mov byte [0x04], 's'
    13 0000001E C606050004              	mov byte [0x05], 0x04
    14                                  
    15 00000023 C606060065              	mov byte [0x06], 'e'
    16 00000028 C606070004              	mov byte [0x07], 0x04
    17                                  
    18                                  dest:
    19 0000002D C60608006D              	mov byte [0x08], 'm'
    20 00000032 C606090004              	mov byte [0x09], 0x04
    21                                  
    22 00000037 C6060A0062              	mov byte [0x0a], 'b'
    23 0000003C C6060B0004              	mov byte [0x0b], 0x04
    24                                  
    25 00000041 C6060C006C              	mov byte [0x0c], 'l'
    26 00000046 C6060D0004              	mov byte [0x0d], 0x04
    27                                  
    28 0000004B C6060E0079              	mov byte [0x0e], 'y'
    29 00000050 C6060F0004              	mov byte [0x0f], 0x04
    30                                  
    31 00000055 C60610002E              	mov byte [0x10], '.'
    32 0000005A C606110004              	mov byte [0x11], 0x04
    33                                  	
    34                                  ;	mov bx, 0x7c00+again 寄存器跳转
    35                                  	
    36                                  	;jmp 0x0000:0x7c00
    37                                  
    38                                  	;jmp 0x0000:0x7c5f ;0x7c00 + 0x5F 这个5F是看lst文件里面的物理地址 所以 = 0x7c5f 和上面功能是一样的 跳转到自己来执行
    39                                  	
    40                                  again:
    41                                  ;	jmp 0x0000:0x7c00+again ;标号 用于计算偏移 跳转
    42                                  ;	jmp bx ; 绝对间接近跳转，近跳转就是跳转到不太远的地方 也就是一个段的内部进行跳转，跳转的位置不是直接给出的是通过bx寄存器间接给出的 是一个绝对地址
    43 0000005F E9FDFF                  	jmp near again ;相对偏移量进行跳转 EB 8位的相对偏移量 E9 16位表示 short 短跳转 -127-128 near 长跳转
    44                                  
    45                                  	
    46                                  
    47                                  	
    48                                  	;times 510-0x5f db 0		;这里的0x5f 是编译出lst文件看到的偏移地址 所以按照这个填充0 一个扇区512字节 末尾2个固定字节55AA 所以510-偏移量
    49                                  	
    50                                  current:
    51 00000062 00<rep 19Ch>            		times 510-(current - start)  db 0
    52                                  	
    53 000001FE 55AA                    	db 0x55, 0xaa
    54                                  
    55                                  ;mov 目的操作数，			源操作数
    56                                  ;	寄存器，内存地址		寄存器，内存地址，立即数
    57                                  
    58                                  ; 目的操作数和源操作数 位必须相同
